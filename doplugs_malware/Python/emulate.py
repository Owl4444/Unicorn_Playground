"""
This script is used to emulate some code or function or portions 
of functions that are self contained. For this case, this script
is used to decrypt some strings which is used for function resolution. 
This reveals the function names that is used.

There are three memory mapped region:
1. Stack
2. Code
3. rData

The rDAta section contains information for xor key and the encrypted data 
for resolving the function. Refer to IDA for such case.

Example:

```c
    v21 = -1165784167;
    v22[0] = 0;
    v12 = _mm_loadl_epi64((&v19 + 1));
    v13 = _mm_and_si128(_mm_xor_si128(_mm_unpacklo_epi8(v12, v12), xmmword_1007F160), xmmword_1007F170);
    *(&v19 + 1) = _mm_packus_epi16(v13, v13).m128i_u64[0];
    do
    {
      v22[v11] ^= (v11 - 124) ^ 0x78;
      ++v11;
    }
    while ( v11 );
```

Whose disassembly is:

```
.text:10001828 C7 44 24 0C 57 73 6B                 mov     dword ptr [esp+48h+var_3C], 776B7357h
.text:10001828 77
.text:10001830 C7 44 24 10 61 43 6F                 mov     dword ptr [esp+48h+var_3C+4], 6B6F4361h
.text:10001830 6B
.text:10001838 66 C7 44 24 14 9D 00                 mov     [esp+48h+var_34], 9Dh
.text:1000183F 89 C6                                mov     esi, eax
.text:10001841 B8 F5 FF FF FF                       mov     eax, 0FFFFFFF5h
.text:10001846 C7 44 24 18 4C 6E 63                 mov     dword ptr [esp+48h+var_30], 67636E4Ch
.text:10001846 67
.text:1000184E C7 44 24 1C 48 6C 64                 mov     [esp+48h+var_2C], 75646C48h
.text:1000184E 75
.text:10001856 C7 44 24 20 99 8B 83                 mov     [esp+48h+var_28], 0BA838B99h
.text:10001856 BA
.text:1000185E 88 5C 24 24                          mov     [esp+48h+var_24], bl
.text:10001862 F3 0F 7E 44 24 0D                    movq    xmm0, [esp+48h+var_3C+1]
.text:10001868 66 0F 60 C0                          punpcklbw xmm0, xmm0
.text:1000186C 66 0F EF 05 60 F1 07                 pxor    xmm0, ds:xmmword_1007F160
.text:1000186C 10
.text:10001874 66 0F DB 05 70 F1 07                 pand    xmm0, ds:xmmword_1007F170
.text:10001874 10
.text:1000187C 66 0F 67 C0                          packuswb xmm0, xmm0
.text:10001880 66 0F D6 44 24 0D                    movq    [esp+48h+var_3C+1], xmm0
.text:10001886
.text:10001886                      loc_10001886:                           ; CODE XREF: WriteFile_0+E3â†“j
.text:10001886 89 C1                                mov     ecx, eax
.text:10001888 80 C1 84                             add     cl, 84h
.text:1000188B 32 4C 04 24                          xor     cl, [esp+eax+48h+var_24]
.text:1000188F 80 F1 78                             xor     cl, 78h
.text:10001892 88 4C 04 24                          mov     [esp+eax+48h+var_24], cl
.text:10001896 40                                   inc     eax
.text:10001897 75 ED                                jnz     short loc_10001886
.text:10001899 8D 44 24 18                          lea     eax, [esp+48h+var_30]
```

Pressing Shift-E, we can dump out the bytes.

The following is what we want.
C744240C57736B77C744241061436F6B66C74424149D0089C6B8F5FFFFFFC74424184C6E6367C744241C486C6475C7442420998B83BA885C2424F30F7E44240D660F60C0660FEF0560F10710660FDB0570F10710660F67C0660FD644240D89C180C184324C042480F178884C04244075ED8D442418


Next, we can run this in the emulator (This script)

$python ./emulator.py <hex_bytes_above>

"""




DEBUG =True 
ENABLE_IPYTHON =False 
#DEBUG = False 
## https://www.youtube.com/watch?v=-CNy4qh08iU


"""
# SELECT IN IDA FROM START TO END> REMEMBER FOR THE XMM0 ONE 
# YOU WILL NEED THE MOVAPS INSTRUCTION BEFORE THAT TOO

from binascii import hexlify
def get_bytes_from_selection():
    start = read_selection_start()
    end = read_selection_end()
    bytes_to_extract = end-start
    print("Bytes to extract : "+ str(bytes_to_extract))
    extracted_bytes = get_bytes(start,bytes_to_extract)
    return str(hexlify(extracted_bytes))[2:-1]
    
print(get_bytes_from_selection())
"""


from unicorn import *
from unicorn.x86_const import *
from binascii import unhexlify
from capstone import *
import IPython
import re, sys



uc = Uc(UC_ARCH_X86, UC_MODE_32)
md = Cs(CS_ARCH_X86, CS_MODE_32)
states = []

def get_register_names():
    """
    Returns a dictionary mapping register constants to their names.
    """
    return {
        UC_X86_REG_EAX: "eax",
        UC_X86_REG_EBX: "ebx",
        UC_X86_REG_ECX: "ecx",
        UC_X86_REG_EDX: "edx",
        UC_X86_REG_ESI: "esi",
        UC_X86_REG_EDI: "edi",
        UC_X86_REG_ESP: "esp",
        UC_X86_REG_EBP: "ebp",
        UC_X86_REG_EIP: "eip",
        UC_X86_REG_XMM0: "xmm0"
    }

class EmulatorState:
    def __init__(self, uc, disassembly, stackData):
        self.registers = self.capture_registers(uc)
        self.disassembly = disassembly
        self.stackData = stackData
    
    def capture_registers(self, uc):
        """
        Captures the current value of the registers.
        """
        reg_names = get_register_names()
        regs = {}
        for reg_id, reg_name in reg_names.items():
            regs[reg_name] = hex(uc.reg_read(reg_id))
        return regs


if len(sys.argv) < 2:
    print("Usage: %s <hex_bytes>" % sys.argv[0])
    sys.exit(1)

CODE = unhexlify(sys.argv[1])


# Setup stack
stack_base = 0x100000
stack_size = 0x10000

# Memory map the stack
uc.mem_map(stack_base, stack_size)
uc.mem_write(stack_base, b"\x00"*stack_size)

# Memory map the .rdata section
PAGE_SIZE = 0x1000
rdata_base = 0x10000000
rdata_size =    0xf00000
offset =        0x7F11C

# Memory map the aligned address range
uc.mem_map(rdata_base, rdata_size)
uc.mem_write(rdata_base, b"\x00"*rdata_size)

# Write the values of xmm0 
data = unhexlify("")
uc.mem_write(rdata_base + offset, data)


# In case of unmapped stack location
currentEsp = stack_base + stack_size // 2

# Set the initial stack pointer
uc.reg_write(UC_X86_REG_ESP, currentEsp)

# Create Code page
code_address = 0x4000000
code_size = 0x1000000

# Map the code page
uc.mem_map(code_address, code_size)
uc.mem_write(code_address, b"\x00"*code_size)

# Write the code to code page
uc.mem_write(code_address, CODE)

def HookCode(emu,address,size, user_data):
    #print(f"Executing at {address:x}, instruction size: {size}")
    code = emu.mem_read(address,size)
    inst = next(md.disasm(code,address),None)
    instruction_text =  (f"0x{inst.address:x}:\t{inst.mnemonic}\t{inst.op_str}")
    stack_data = emu.mem_read(emu.reg_read(UC_X86_REG_ESP),0xf0)

    states.append(EmulatorState(emu, instruction_text, stack_data))

    
if DEBUG:
    # https://hackmd.io/@K-atc/rJTUtGwuW?type=view
    # https://github.com/unicorn-engine/unicorn/blob/master/bindings/python/sample_x86.py
    uc.hook_add(UC_HOOK_CODE, HookCode)

uc.emu_start(code_address, code_address + len(CODE))
stack_dump = uc.mem_read(uc.reg_read(UC_X86_REG_ESP),0x1000)


def extract_printable_strings(data: bytearray):
    # Regex pattern for printable ASCII characters
    ascii_pattern = re.compile(b'[\x20-\x7E]+')
    ascii_matches = ascii_pattern.findall(data)
    ascii_strings = [match.decode('ascii') for match in ascii_matches]

    for i in ascii_strings:
        if len(i) > 1:
            print("[ASCII] : " + i)
    
    # Regex pattern for UTF-16 little-endian encoded strings
    # This assumes little-endian encoding; adjust if big-endian (\x00[\x20-\x7E]) is needed
    unicode_pattern = re.compile(b'(([\x2e-\x7f]\x00)+)')
    unicode_matches = unicode_pattern.findall(data)
    for i in unicode_matches:
        for j in i:
            unicode_string = j.decode('utf-16-le')
            if len(unicode_string) > 1:
                print("[UNICODE] : " + unicode_string)


#extract_printable_strings(stack_dump)
extract_printable_strings(stack_dump)
if DEBUG:
    for i in states:
        print("")
        print(i.disassembly)
        print(i.registers)
        print(i.stackData)
if ENABLE_IPYTHON: 
    IPython.embed()

